{"version":3,"sources":["components/Card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","console","log","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","user","this","filteredmonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAGaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBACAC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACP,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCLTC,EAAW,SAAAR,GAEpB,OADAS,QAAQC,IAAI,qBACL,qBAAKT,UAAU,YAAf,SACFD,EAAMW,SAASC,KAAI,SAAAR,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCLlBQ,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OAErB,uBACAd,UAAU,SACVe,KAAK,OACLF,YAAaA,EACbG,SAAUF,MCsCCG,G,wDAzCb,aAAe,IAAD,8BACZ,gBAeAH,aAAe,SAAAI,GACf,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAfpC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IAGfZ,QAAQC,IAAI,eAPA,E,qDASd,WAAqB,IAAD,OAClBD,QAAQC,IAAI,YAEZe,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAU,EAAKT,SAAS,CAAET,SAAUkB,S,oBAK9C,WACEpB,QAAQC,IAAI,UADL,MAEyBoB,KAAKN,MAA9Bb,EAFA,EAEAA,SAAUU,EAFV,EAEUA,YAEXU,EAAmBpB,EAASqB,QAAO,SAAA5B,GAAO,OAC9CA,EAAQE,KAAK2B,cAAcC,SAASb,EAAYY,kBAElD,OACE,sBAAKhC,UAAU,MAAf,UACE,iDACD,cAAC,EAAD,CACAa,YAAc,kBACdC,aAAce,KAAKf,eAElB,cAAC,EAAD,CAAUJ,SAAUoB,W,GAlCVI,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7fc6a45b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './card.styles.css';\r\n\r\nexport const Card = props=>(\r\n    <div className=\"card-container\">\r\n        <img \r\n        alt='monster' \r\n        src={`https://robohash.org/${props.monster.id}?set=set2&size=100x100`}/>\r\n    <h1>{props.monster.name}</h1>\r\n    <p>{props.monster.email}</p>\r\n    </div>\r\n\r\n);","import React from \"react\";\r\nimport './card-list.style.css';\r\nimport { Card } from \"../Card/card.component\";\r\n\r\nexport const CardList = props =>{\r\n    console.log('cardlistcomponent');\r\n    return <div className=\"card-list\">\r\n        {props.monsters.map(monster => (\r\n            <Card key={monster.id} monster={monster}></Card>\r\n          ))}\r\n    </div>\r\n}","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder, handleChange})=>(\r\n\r\n    <input \r\n    className=\"search\"\r\n    type=\"text\" \r\n    placeholder={placeholder}\r\n    onChange={handleChange}\r\n    />\r\n);","import React, { Component } from \"react\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n    // this.handleChange = this.handleChange.bind(this);\n    console.log(\"constructor\");\n  }\n  componentDidMount() {\n    console.log(\"didmount\");\n\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((user) => this.setState({ monsters: user }));\n  }\n    handleChange = e =>{\n    this.setState({searchField:e.target.value})\n  }\n  render() {\n    console.log(\"render\");\n    const {monsters, searchField} = this.state;\n\n    const filteredmonsters = monsters.filter(monster=>\n      monster.name.toLowerCase().includes(searchField.toLowerCase()))\n\n    return (\n      <div className=\"App\">\n        <h1>Monster Rolodex</h1>\n       <SearchBox\n       placeholder = \"search monsters\"\n       handleChange={this.handleChange}>\n         </SearchBox>\n        <CardList monsters={filteredmonsters}>\n          \n        </CardList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}